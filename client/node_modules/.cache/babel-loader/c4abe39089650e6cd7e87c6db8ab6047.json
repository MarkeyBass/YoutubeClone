{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport userReducer from \"./userSlice\";\nimport videoReducer from \"./videoSlice\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  video: videoReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: rootReducer // {\n  //   user: userReducer,\n  //   video: videoReducer,\n  // },\n\n}); // Storage\n// -- user\n// ----initialState (currentUser, loading, error)\n// import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\n// import userReducer from \"./userSlice\";\n// import videoReducer from \"./videoSlice\";\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n// const persistConfig = {\n//   key: \"root\",\n//   version: 1,\n//   storage,\n// };\n// const rootReducer = combineReducers({ user: userReducer, video: videoReducer });\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n// export const store = configureStore({\n//   reducer: persistedReducer,\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }),\n// });\n// export const persistor = persistStore(store)","map":{"version":3,"names":["configureStore","combineReducers","userReducer","videoReducer","persistConfig","key","version","storage","rootReducer","user","video","persistedReducer","persistReducer","store","reducer"],"sources":["C:/dev/FS/YouTube-Clone/client/src/redux/store.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"./userSlice\";\r\nimport videoReducer from \"./videoSlice\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({ user: userReducer, video: videoReducer });\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer\r\n  // {\r\n  //   user: userReducer,\r\n  //   video: videoReducer,\r\n  // },\r\n});\r\n\r\n// Storage\r\n// -- user\r\n// ----initialState (currentUser, loading, error)\r\n\r\n// import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\n// import userReducer from \"./userSlice\";\r\n// import videoReducer from \"./videoSlice\";\r\n// import {\r\n//   persistStore,\r\n//   persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\n\r\n// const persistConfig = {\r\n//   key: \"root\",\r\n//   version: 1,\r\n//   storage,\r\n// };\r\n\r\n// const rootReducer = combineReducers({ user: userReducer, video: videoReducer });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// export const store = configureStore({\r\n//   reducer: persistedReducer,\r\n//   middleware: (getDefaultMiddleware) =>\r\n//     getDefaultMiddleware({\r\n//       serializableCheck: {\r\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//       },\r\n//     }),\r\n// });\r\n\r\n// export const persistor = persistStore(store)\r\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBC,OAAO,EAAE,CAFW;EAGpBC;AAHoB,CAAtB;AAMA,MAAMC,WAAW,GAAGP,eAAe,CAAC;EAAEQ,IAAI,EAAEP,WAAR;EAAqBQ,KAAK,EAAEP;AAA5B,CAAD,CAAnC;AAEA,MAAMQ,gBAAgB,GAAGC,cAAc,CAACR,aAAD,EAAgBI,WAAhB,CAAvC;AAEA,OAAO,MAAMK,KAAK,GAAGb,cAAc,CAAC;EAClCc,OAAO,EAAEN,WADyB,CAElC;EACA;EACA;EACA;;AALkC,CAAD,CAA5B,C,CAQP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}