[{"C:\\dev\\FS\\YouTube-Clone\\client\\src\\index.js":"1","C:\\dev\\FS\\YouTube-Clone\\client\\src\\App.js":"2","C:\\dev\\FS\\YouTube-Clone\\client\\src\\utils\\Theme.js":"3","C:\\dev\\FS\\YouTube-Clone\\client\\src\\pages\\Home.jsx":"4","C:\\dev\\FS\\YouTube-Clone\\client\\src\\components\\Navbar.jsx":"5","C:\\dev\\FS\\YouTube-Clone\\client\\src\\components\\Menu.jsx":"6","C:\\dev\\FS\\YouTube-Clone\\client\\src\\pages\\Video.jsx":"7","C:\\dev\\FS\\YouTube-Clone\\client\\src\\pages\\SignIn.jsx":"8","C:\\dev\\FS\\YouTube-Clone\\client\\src\\components\\Comments.jsx":"9","C:\\dev\\FS\\YouTube-Clone\\client\\src\\components\\Comment.jsx":"10","C:\\dev\\FS\\YouTube-Clone\\client\\src\\components\\Card.jsx":"11","C:\\dev\\FS\\YouTube-Clone\\client\\src\\redux\\store.js":"12","C:\\dev\\FS\\YouTube-Clone\\client\\src\\redux\\userSlice.js":"13","C:\\dev\\FS\\YouTube-Clone\\client\\src\\redux\\videoSlice.js":"14","C:\\dev\\FS\\YouTube-Clone\\client\\src\\firebase.js":"15"},{"size":528,"mtime":1668396083729,"results":"16","hashOfConfig":"17"},{"size":3715,"mtime":1663408022943,"results":"18","hashOfConfig":"17"},{"size":301,"mtime":1663244080358,"results":"19","hashOfConfig":"17"},{"size":816,"mtime":1663421599988,"results":"20","hashOfConfig":"17"},{"size":2295,"mtime":1665421106663,"results":"21","hashOfConfig":"17"},{"size":7208,"mtime":1665487571323,"results":"22","hashOfConfig":"17"},{"size":4700,"mtime":1663422830049,"results":"23","hashOfConfig":"17"},{"size":4264,"mtime":1668572165278,"results":"24","hashOfConfig":"17"},{"size":1662,"mtime":1663311974822,"results":"25","hashOfConfig":"17"},{"size":1588,"mtime":1663313868635,"results":"26","hashOfConfig":"17"},{"size":2994,"mtime":1663425567166,"results":"27","hashOfConfig":"17"},{"size":1123,"mtime":1668396037266,"results":"28","hashOfConfig":"17"},{"size":1176,"mtime":1665420935435,"results":"29","hashOfConfig":"17"},{"size":1376,"mtime":1665397459366,"results":"30","hashOfConfig":"17"},{"size":808,"mtime":1668399545462,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hjpbpf",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\FS\\YouTube-Clone\\client\\src\\index.js",[],[],"C:\\dev\\FS\\YouTube-Clone\\client\\src\\App.js",[],[],[],"C:\\dev\\FS\\YouTube-Clone\\client\\src\\utils\\Theme.js",[],[],"C:\\dev\\FS\\YouTube-Clone\\client\\src\\pages\\Home.jsx",["83","84"],[],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"../components/Card\";\r\nimport axios from \"axios\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Home = ({ type }) => {\r\n  const [videos, setVideos] = useState([]);\r\n  // Todo: implement err\r\n  const [err, setError] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchVideos = async () => {\r\n      const res = await axios.get(`/api/videos/${type}`);\r\n      setVideos(res.data);\r\n      // console.log(res.data);\r\n    };\r\n\r\n    fetchVideos();\r\n  }, [type]);\r\n\r\n  return (\r\n    <Container>\r\n      {videos.map((video) => (\r\n        <Card key={video._id} video={video}/>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\dev\\FS\\YouTube-Clone\\client\\src\\components\\Navbar.jsx",[],[],"C:\\dev\\FS\\YouTube-Clone\\client\\src\\components\\Menu.jsx",["85","86","87","88"],[],"C:\\dev\\FS\\YouTube-Clone\\client\\src\\pages\\Video.jsx",["89"],[],"import { AddTaskOutlined, ReplyOutlined, ThumbUpOutlined, ThumbDownOutlined } from \"@mui/icons-material\";\r\n// import ThumbUpOutlinedIcon from \"@mui/icons-material/ThumbUpOutlined\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Comments from \"../components/Comments\";\r\nimport Card from \"../components/Card\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  gap: 24px;\r\n  /* height: 100vh; */\r\n`;\r\nconst Content = styled.div`\r\n  flex: 5;\r\n`;\r\n\r\nconst VideoWrapper = styled.div`\r\n  /* flex: 5; */\r\n`;\r\nconst Recomendation = styled.div`\r\n  flex: 2;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  margin-top: 20px;\r\n  margin-bottom: 10px;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst Details = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Info = styled.span`\r\n  color: ${({ theme }) => theme.textSoft};\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst Button = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Hr = styled.hr`\r\n  margin: 15px 0px;\r\n  border: 0.5px solid ${({ theme }) => theme.soft};\r\n`;\r\n\r\nconst Channel = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ChannelInfo = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst ChannelDetail = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst ChannelName = styled.span`\r\n  font-weight: 500;\r\n`;\r\n\r\nconst ChannelCounter = styled.span`\r\n  margin-top: 5px;\r\n  margin-bottom: 20px;\r\n  color: ${({ theme }) => theme.textSoft};\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Subscribe = styled.button`\r\n  background-color: #cc1a00;\r\n  font-weight: 500;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 3px;\r\n  height: max-content;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst VideoFrame = styled.video`\r\n  /* max-height: 720px;\r\n  width: 100%;\r\n  object-fit: cover; */\r\n`;\r\n\r\nconst Video = () => {\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <VideoWrapper>\r\n          <iframe\r\n            width=\"100%\"\r\n            height=\"520\"\r\n            src=\"https://www.youtube.com/embed/EeWyix8ysEc\"\r\n            title=\"YouTube video player\"\r\n            // frameborder=\"0\"\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            // allowfullscreen\r\n            allowFullScreen\r\n          ></iframe>\r\n        </VideoWrapper>\r\n        <Title>Test Video</Title>\r\n        <Details>\r\n          <Info>8,325,566 views â€¢ jun 22, 2022</Info>\r\n          <Buttons>\r\n            <Button>\r\n              <ThumbUpOutlined /> 123\r\n            </Button>\r\n            <Button>\r\n              <ThumbDownOutlined />\r\n              Dislike\r\n            </Button>\r\n            <Button>\r\n              <ReplyOutlined />\r\n              Share\r\n            </Button>\r\n            <Button>\r\n              <AddTaskOutlined />\r\n              Save\r\n            </Button>\r\n          </Buttons>\r\n        </Details>\r\n        <Hr />\r\n        <Channel>\r\n          <ChannelInfo>\r\n            <Image\r\n              src={\r\n                \"https://i.ytimg.com/vi/aGN0pXIaCaA/hqdefault.jpg?sqp=-oaymwEcCPYBEIoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&rs=AOn4CLAKqe7a8qGlLHRiUa8DiMQlb6aYHQ\"\r\n              }\r\n            />\r\n            <ChannelDetail>\r\n              <ChannelName>MarkeyBass</ChannelName>\r\n              <ChannelCounter>200K Subscribers</ChannelCounter>\r\n              <Description>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. A veritatis quis omnis sed\r\n                corrupti inventore, molestias facere, vel quidem vero expedita libero? Deleniti\r\n                aliquid animi, quidem eveniet quisquam, impedit exercitationem reprehenderit ullam\r\n                magni praesentium aperiam corrupti obcaecati quam? Ab aperiam omnis modi aspernatur\r\n                aliquam perferendis!\r\n              </Description>\r\n            </ChannelDetail>\r\n          </ChannelInfo>\r\n          <Subscribe>Subscribe</Subscribe>\r\n        </Channel>\r\n        <Hr/>\r\n        <Comments/>\r\n      </Content>\r\n      <Recomendation>\r\n        <Card type=\"sm\"/>\r\n        <Card type=\"sm\"/>\r\n        <Card type=\"sm\"/>\r\n        <Card type=\"sm\"/>\r\n        <Card type=\"sm\"/>\r\n        <Card type=\"sm\"/>\r\n      </Recomendation>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","C:\\dev\\FS\\YouTube-Clone\\client\\src\\pages\\SignIn.jsx",["90"],[],"C:\\dev\\FS\\YouTube-Clone\\client\\src\\components\\Comments.jsx",["91","92"],[],"// import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst NewComment = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: none;\r\n  border-bottom: 1px solid ${({ theme }) => theme.soft};\r\n  color: ${({ theme }) => theme.text};\r\n  background-color: transparent;\r\n  outline: none;\r\n  padding: 5px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Comments = ({videoId}) => {\r\n\r\n  // const { currentUser } = useSelector((state) => state.user);\r\n\r\n  // const [comments, setComments] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchComments = async () => {\r\n  //     try {\r\n  //       const res = await axios.get(`/comments/${videoId}`);\r\n  //       setComments(res.data);\r\n  //     } catch (err) {}\r\n  //   };\r\n  //   fetchComments();\r\n  // }, [videoId]);\r\n\r\n  //TODO: ADD NEW COMMENT FUNCTIONALITY\r\n\r\n  return (\r\n    <Container>\r\n      <NewComment>\r\n        {/* <Avatar src={currentUser.img} /> */}\r\n        <Avatar src=\"https://yt3.ggpht.com/ytc/AMLnZu9ZKZmQhnOANqv82rLt5REieeJFCxJPIltAEb6dFg=s88-c-k-c0x00ffffff-no-rj\" />\r\n        <Input placeholder=\"Add a comment...\" />\r\n      </NewComment>\r\n      <Comment/>\r\n      <Comment/>\r\n      <Comment/>\r\n      <Comment/>\r\n      {/* {comments.map(comment=>(\r\n        <Comment key={comment._id} comment={comment}/>\r\n      ))} */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Comments;","C:\\dev\\FS\\YouTube-Clone\\client\\src\\components\\Comment.jsx",["93","94","95"],[],"// import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin: 30px 0px;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Details = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\nconst Name = styled.span`\r\n  font-size: 13px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Date = styled.span`\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  color: ${({ theme }) => theme.textSoft};\r\n  margin-left: 5px;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Comment = ({ comment }) => {\r\n  const [channel, setChannel] = useState({});\r\n\r\n  // useEffect(() => {\r\n  //   const fetchComment = async () => {\r\n  //     const res = await axios.get(`/users/find/${comment.userId}`);\r\n  //     setChannel(res.data)\r\n  //   };\r\n  //   fetchComment();\r\n  // }, [comment.userId]);\r\n\r\n  return (\r\n    <Container>\r\n      <Avatar src=\"https://yt3.ggpht.com/ytc/AMLnZu9ZKZmQhnOANqv82rLt5REieeJFCxJPIltAEb6dFg=s88-c-k-c0x00ffffff-no-rj\" />\r\n\r\n      {/* {/* <Avatar src={channel.img} /> */}\r\n      <Details>\r\n        <Name>\r\n          Moshe Gzuztra\r\n          {/* {channel.name} */}\r\n          <Date>1 day ago</Date>\r\n        </Name>\r\n        {/* <Text>{comment.desc}</Text> */}\r\n        <Text>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Debitis, distinctio?</Text>\r\n      </Details> \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Comment;","C:\\dev\\FS\\YouTube-Clone\\client\\src\\components\\Card.jsx",["96"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Video from \"../pages/Video\";\r\nimport { format } from \"timeago.js\";\r\nimport axios from \"axios\";\r\n\r\nconst Container = styled.div`\r\n  width: ${(props) => props.type !== \"sm\" && \"360px\"};\r\n  margin-bottom: ${(props) => (props.type === \"sm\" ? \"10px\" : \"45px\")};\r\n  cursor: pointer;\r\n  display: ${(props) => props.type === \"sm\" && \"flex\"};\r\n  gap: 10px;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: ${(props) => (props.type === \"sm\" ? \"120px\" : \"202px\")};\r\n  background-color: #999;\r\n  flex: 1;\r\n`;\r\n\r\nconst Details = styled.div`\r\n  display: flex;\r\n  margin-top: ${(props) => props.type !== \"sm\" && \"16px\"};\r\n  gap: 12px;\r\n  flex: 1;\r\n`;\r\n\r\nconst ChannelImage = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  background-color: #999;\r\n  display: ${(props) => props.type === \"sm\" && \"none\"};\r\n`;\r\n\r\nconst Texts = styled.div``;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst ChannelName = styled.h2`\r\n  font-size: 14px;\r\n  color: ${({ theme }) => theme.textSoft};\r\n  margin: 9px 0px;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  font-size: 14px;\r\n  color: ${({ theme }) => theme.textSoft};\r\n`;\r\n\r\nconst Card = ({ type, video }) => {\r\n  if (!video) {\r\n    video = {\r\n      _id: \"6325723df0474bd889b51f1d\",\r\n      username: \"test1\",\r\n      email: \"test1@gmail.com\",\r\n      subscribers: 0,\r\n      subscribedUsers: [\"6324cef90609fb69d858c2ae\"],\r\n      fromGoogle: false,\r\n      createdAt: \"2022-09-17T07:07:41.881Z\",\r\n      updatedAt: \"2022-09-17T07:43:40.863Z\",\r\n      __v: 0,\r\n    };\r\n  }\r\n  const [channel, setChannel] = useState({});\r\n  useEffect(() => {\r\n    const fetchChannels = async () => {\r\n      const res = await axios.get(`/api/users/find/${video.userId}`);\r\n      setChannel(res.data);\r\n      // console.log(res.data);\r\n    };\r\n\r\n    fetchChannels();\r\n  }, [video.userId]);\r\n\r\n  // {console.log(video.imageUrl)}\r\n  return (\r\n    <Link to=\"/video/test\" style={{ textDecoration: \"none\" }}>\r\n      <Container type={type}>\r\n        <Image\r\n          // src={\"https://i.ytimg.com/vi/aGN0pXIaCaA/hqdefault.jpg?sqp=-oaymwEcCPYBEIoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&rs=AOn4CLAKqe7a8qGlLHRiUa8DiMQlb6aYHQ\"}\r\n          // src={video.imgUrl}\r\n\r\n          type={type}\r\n        />\r\n        <Details type={type}>\r\n          <ChannelImage\r\n            type={type}\r\n            // src={\"https://yt3.ggpht.com/ytc/AMLnZu8GnUmyc-TNNZ6OHURrHrre9QJ-_6jalsLeIQ=s88-c-k-c0x00ffffff-no-rj\"}\r\n            src={channel.img}\r\n          />\r\n          <Texts>\r\n            <Title>{video.title}</Title>\r\n            <ChannelName>{channel.username}</ChannelName>\r\n            <Info>\r\n              {video.views} views â€¢ {format(video.createdAt)}\r\n            </Info>\r\n          </Texts>\r\n        </Details>\r\n      </Container>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","C:\\dev\\FS\\YouTube-Clone\\client\\src\\redux\\store.js",[],[],"C:\\dev\\FS\\YouTube-Clone\\client\\src\\redux\\userSlice.js",[],[],"C:\\dev\\FS\\YouTube-Clone\\client\\src\\redux\\videoSlice.js",[],[],"C:\\dev\\FS\\YouTube-Clone\\client\\src\\firebase.js",[],[],{"ruleId":"97","severity":1,"message":"98","line":15,"column":10,"nodeType":"99","messageId":"100","endLine":15,"endColumn":13},{"ruleId":"97","severity":1,"message":"101","line":15,"column":15,"nodeType":"99","messageId":"100","endLine":15,"endColumn":23},{"ruleId":"97","severity":1,"message":"102","line":20,"column":16,"nodeType":"99","messageId":"100","endLine":20,"endColumn":24},{"ruleId":"97","severity":1,"message":"103","line":22,"column":8,"nodeType":"99","messageId":"100","endLine":22,"endColumn":29},{"ruleId":"97","severity":1,"message":"104","line":142,"column":7,"nodeType":"99","messageId":"100","endLine":142,"endColumn":11},{"ruleId":"97","severity":1,"message":"105","line":150,"column":7,"nodeType":"99","messageId":"100","endLine":150,"endColumn":13},{"ruleId":"97","severity":1,"message":"106","line":109,"column":7,"nodeType":"99","messageId":"100","endLine":109,"endColumn":17},{"ruleId":"97","severity":1,"message":"107","line":75,"column":10,"nodeType":"99","messageId":"100","endLine":75,"endColumn":15},{"ruleId":"97","severity":1,"message":"108","line":2,"column":17,"nodeType":"99","messageId":"100","endLine":2,"endColumn":26},{"ruleId":"97","severity":1,"message":"109","line":2,"column":28,"nodeType":"99","messageId":"100","endLine":2,"endColumn":36},{"ruleId":"97","severity":1,"message":"108","line":2,"column":17,"nodeType":"99","messageId":"100","endLine":2,"endColumn":26},{"ruleId":"97","severity":1,"message":"110","line":40,"column":10,"nodeType":"99","messageId":"100","endLine":40,"endColumn":17},{"ruleId":"97","severity":1,"message":"111","line":40,"column":19,"nodeType":"99","messageId":"100","endLine":40,"endColumn":29},{"ruleId":"97","severity":1,"message":"112","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":13},"no-unused-vars","'err' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","'redirect' is defined but never used.","'VideoCallOutlinedIcon' is defined but never used.","'User' is assigned a value but never used.","'Avatar' is assigned a value but never used.","'VideoFrame' is assigned a value but never used.","'email' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'channel' is assigned a value but never used.","'setChannel' is assigned a value but never used.","'Video' is defined but never used."]